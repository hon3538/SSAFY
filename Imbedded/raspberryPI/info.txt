라즈베리파이에 썼던 모듈을 (python)
르네사스/st 보드에 사용하고 싶다 (.c)
-> 어떻게 할까?

1. 해당 모듈이 르네사스 보드 or st보드도 지원하는지 알아본다 (라이브러리가 있는지)
2-1. 찾으면 열심히 개발한다.
2-2. 없다면?

3. datasheet보면서 메모리 맵 보면서 비트연산하면서 data를 읽는다.
4. python으로 제작된 라이브러리를 c로 바꾼다.
-> class로 구현된 라이브러리 -> 함수로 변경


유선 vs 무선 개발자가 더 선호하는 통신은 무엇일까?
1. 유선 : 데이터 손실 or 디버깅이 쉽다
2. 무선 : 디버깅이 어렵다. 데이터가 손실이 났는 지 체크가 어렵다
-> 벽을 통과하냐 못하냐 : wkfi /blu 실제 이론과 많은 간격이 있다.


두장치끼리 글자를 주고 받으려면 어떻게 해야할까..?
1. 유선통신을 쓴다 
-> 유선(USB or Lan cable)으로 연결해서 개발하면 되지않을까..? -> 어렵다....
-> 통신을 위해 중간 역할을 해주는 드라이버 모듈을 쓰면 간단해진다(고수들이 만들어둠)

장치를 연결하는 가장 기본이 되는, 간단한 통신방법
1. UART 프로토콜, Univversal Asynchronous Receiver/Transmitter
2. SPI 프로토콜, Serial Peripheral Interface Bus
3. I2C 프로토콜, Inter-Integrated Circuit

2. 무선통신을 하면 되지 않을까?
-> 365일 24시간 신뢰성을 보장해야하는 환경에서는 안정성이 떨어지기때문에
무선 통신을 쓸 수 없다.

유/무선 프로토콜 종류!
# 유선통신
1. UART
2. SPI
3. I2C (아이 스퀘어 씨)
4. CAN

# 무선통신
1. 적외선
2. RFID
3. 블루투스
4. Wifi

# I2C가 GPIO 연결보다 좋은점
-> 핀 2개로 다량의 장치를 연결하여 각각 제어할 수 있다.

# SPI
-> I2C같이 Master/Slave 통신
!장점
-> Master가 slave에게 데이터를 전송하면서, 동시에 데이터를 받을 수도 있다
-> 빠르다, 따라서 주로 고속이 필요한 장치에 쓰임
!단점
-> I2C는 2개 핀이 필요했지만 (SCL,SDA)
-> SPI는 4개 핀 필요 (CS,SCK,MOSI,MISO)
CS: slave 선택(chip select)
SCK : 클럭
MOSI : Master Out Slave In -> 마스터에서 나와서 슬레이브로 들어감
MISO : Master in Slave Out -> 슬레이브에서 나와서 마스터로 들어감

#https://github.com/pimylifeup/MFRC522-python
# git clone 해서 설치 파일들 가져오고 setup.py 설치
# sudo python3 setup.py install

# wget 은 웹에서 파일다운로드 할때 사용 
# wget [파일link]

# raspi-gpio get -> gpio 정보

# 임베디드에서 모터를 사용할 때 소모전류를 확인해야 한다
라즈베리파이에는 여유 전류가 없다
라즈베리파이 어댑터 : 3A
라즈베리파이 소모전류 3A
만약 모터를 쓰게 된다면 , 전류를 빼앗겨 라즈베리파이 오작동 . 고장 가능성 존재

강한 모터에는 추가 전력원이 필요하다
임베디드에서 모터를 사용할 때
전압: 5V
전류: 500mA ~ 1.5A 소모
-> 추가 전력원 필요